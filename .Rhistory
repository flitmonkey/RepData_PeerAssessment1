install.packages("devtools")
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(Kernsmooth)
library(Kernmooth)
library(KernSmooth)
x<-4
class(x)
x=c(4, TRUE)
class(x)
x<-c(4, TRUE)
class(x)
y<-c(4, TRUE)
y
class(y)
x<-c(1,3,5)
y<-c(3,2,10)
cbind(x,y)
z=cbind(x,y)
class(z)
x<-list(2,"a","b",TRUE)
x[[2]]
p<-x[[2]]
class(p)
x<-1:4
y<-2
z<-x+y
z
x<-c(17,14,4,5,13,12,10)
x[x>10]<-4
x
install.packages("swirl")
library("swirl")
rm(list=ls())
x<-1
print(x)
x
msg<-"hello"
msg
x<-5 ##nothing printed
x
getwd()
x<-1:20
x
print(x)
x<-1
x
x
class(x)
class(1)
class(1L)
y<-c(1.7, "a")
y
x<-0:6
as.logical(x)
x
x<-c(1,3,5)
y<-c(3,2,10)
cbind(x,y)
z<-cbind(x,y)
dim(z)
library(swirl)
rm(list=ls())
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x<-9
play()
ls()
nxt()
ls()
play()
list.files()
nxt()
list.files()
help(list.files)
?list.files
args(list.files)
old.dir<-getwd()
dir.create("testdir")
setwd("testdir")
file.create(mytest.R)
file.create("mytest.R")
list.files()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
play()
file.path("mytest3.R")
file.path("mytest3.R", full.names=TRUE)
getwd()
nxt()
getwd()
file.path("mytest3.R")
play()
?dir.create
nxt()
dir.create("testdir2\testdir3")
dir.create("testdir2\testdir3", recursive=TRUE)
?
nxt()
dir.create("testdir2\testdir3", recursive=TRUE)
dir.create("testdir2/testdir3", recursive=TRUE)
dir.delete("testdir2/testdir3", recursive=TRUE)
unlink("testdir2/testdir3", recursive=TRUE)
unlink("testdir2", recursive=TRUE)
setwd(old.dir)
unlink("testdir", recursive=TRUE)
bye()
swirl()
library(swirl)
swirl
swirl()
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2<-matrix(1:20, nrow=4,ncol = 5)
identical(my_matrix, my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients, my_matrix)
my_data<-data.frame(patients, my_martix)
my_data<-data.frame(patients, my_matrix)
my_data
class(my_data)
cname("patient", "age", "weight", "bp", "rating","test")
cname>=c("patient", "age", "weight", "bp", "rating","test")
cname<-c("patient", "age", "weight", "bp", "rating","test")
cname<-c("patient", "age", "weight", "bp", "rating","test")
cname<-c("patient","age","weight","bp","rating","test")
cnames<-c("patient","age","weight","bp","rating","test")
colnames(my_data)<-cnames
my_data
rm(list=ls())
swirl()
library(swirl)
swirl()
True==True
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
!(5=7)
!(5==7)
FALSE&FALSE
TRUE&C(TRUE, FALSE, FALSE)
TRUE&c(TRUE, FALSE, FALSE)
TRUE&&c(TRUE, FALSE, FALSE)
TRUE|c(TRUE, FALSE, FALSE)
TRUE||c(TRUE, FALSE, FALSE)
5>8!!6!=8&&4>3.9
5>8||6!=8&&4>3.9
isTRUE(6>4)
identical('twins','twins')
xor(5==6,!FALSE)
ints<-sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
library(swirl)
swirl()
swirl()
library(datasets)
data(iris)
?iris
summary(iris)
iris
iris[species=virginica]
iris[species='virginica']
iris[species="virginica"]
iris[species=="virginica"]
iris[,species=="virginica"]
iris[species=="virginica",]
viginicajf<-iris[iris$species=="virginica"]
viginicajf
viginicajf()
viginicajf[]
viginicajf<-iris[iris$species=="virginica",]
viginicajf
str(iris)
viginicajf<-iris[iris$Species=="virginica",]
str(iris)
viginicajf
summary(viginicajf)
apply(iris[,1:4],1,mean)
apply(iris[, 1:4], 2, mean)
apply(iris, 2, mean)
rowMeans(iris[,1:4])
apply(iris[, 1:4], 2, mean)
rm(list==ls)
rm(list=="ls")
rm?
s
?rm
rm(list=ls())
library(datasets)
data(mtcars)
?mtcars
sapply(mtcars, cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$cyl, mtcars$mpg, mean)
lapply(mtcars, mean)
with(mtcars, tapply(mpg, cyl, mean))
with(mtcars, tapply(hp, cyl, mean))
temp1<-with(mtcars, tapply(hp, cyl, mean))
temp1
temp1[,1]
temp1[1]
str(temp1)
temp1[1]-1
temp1[1]-temp1[3]
debug(ls)
ls
rm(list==ls())
?rm
rm(list=ls())
swirl()
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list<-lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect<-sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colours<-flags[,11:17]
flag_colours<-flags[, 11:17]
flag_colors<-flags[, 11:17]
head()
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
install.packages("xlsx")
library(xlsx)
source('C:/_WORK/COURSERA/DataScience/ExploratoryDataAnalysis/Proj1/ExData_Plotting1/plot1.R')
source('C:/_WORK/COURSERA/DataScience/ExploratoryDataAnalysis/Proj1/ExData_Plotting1/plot1.R')
library(nlme)
library(lattice)
p<-xyplot(weight ~ Time | Diet, BodyWeight)
class(p)
p
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
package(ggplot2)
install.packages("ggplot2")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth="loess")
qplot(votes, rating, data = movies, panel=panel.loess)
qplot(votes, rating, data = movies)+geom_smooth()
qplot(votes, rating, data = movies)+stats_smooth("loess")
source('C:/_WORK/COURSERA/DataScience/ReproducibleResearch/Proj1/RepData_PeerAssessment1/steps.R')
source('C:/_WORK/COURSERA/DataScience/ReproducibleResearch/Proj1/RepData_PeerAssessment1/steps.R')
source('C:/_WORK/COURSERA/DataScience/ReproducibleResearch/Proj1/RepData_PeerAssessment1/steps.R')
install.packages("dplyr")
activityInterval<-group_by(activity, interval)
library(dplyr)
activityInterval<-group_by(activity, interval)
activitybyInterval<-summarise(activityInterval,meanSteps=mean(steps, na.rm=TRUE))
24*60/5.0
source('C:/_WORK/COURSERA/DataScience/ReproducibleResearch/Proj1/RepData_PeerAssessment1/steps.R')
activityInterval<-group_by(activity, interval)
activitybyInterval<-summarise(activityInterval,meanSteps=mean(steps, na.rm=TRUE))
q<-ggplot(data=activitybyInterval, aes(activitybyInterval$meanSteps)) + geom_line()
print(q)
library("ggplot2")
print(q)
q<-ggplot(data=activitybyInterval, aes(x=interval,y=meanSteps)) + geom_line()+labs(title="Time series of Average steps by 5 min interval") +
labs(x="Interval", y="Average steps")
print(q)
source('C:/_WORK/COURSERA/DataScience/ReproducibleResearch/Proj1/RepData_PeerAssessment1/steps.R')
source('C:/_WORK/COURSERA/DataScience/ReproducibleResearch/Proj1/RepData_PeerAssessment1/steps.R')
which.max( activitybyInterval$meansteps )
activitybyInterval$meanSteps
which.max( activitybyInterval$meansteps )
i<-which.max( activitybyInterval$meansteps )
i
i<-which.min( activitybyInterval$meansteps )
i
which.max( activitybyInterval$meansteps )
which.max( activitybyInterval[,2] )
which.max( activitybyInterval[,1] )
which.max( activitybyInterval$meanSteps )
activitybyInterval$interval[104]
